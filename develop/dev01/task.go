package main

import (
	"fmt"
	"os"
	"time"

	"github.com/beevik/ntp"
)

/*
=== Базовая задача ===

Создать программу печатающую точное время с использованием NTP библиотеки.Инициализировать как go module.
Использовать библиотеку https://github.com/beevik/ntp.
Написать программу печатающую текущее время / точное время с использованием этой библиотеки.

Программа должна быть оформлена с использованием как go module.
Програмам должна корректно обрабатывать ошибки библиотеки: распечатывать их в STDERR и возвращать ненулевой код выхода в OS.
Программа должна проходить проверки go vet и golint.
*/

const hostName = "0.beevik-ntp.pool.ntp.org"

func getTime() (time.Time, error) {
	// Функция получения текущего времени с использованием NTP библиотеки
	ntpTime, err := ntp.Time(hostName)
	if err != nil {
		return time.Time{}, err
	}
	return ntpTime, nil
}

func main() {
	ntpTime, err := getTime()
	if err != nil {
		// Печатаем ошибку в STDERR. Поток STDERR (Standard Error) позволяет отделить нормальный вывод программы от возникающих ошибок.
		fmt.Fprintln(os.Stderr, "Ошибка в получении точного времени с помощью NTP библиотеки:", err)
		// Завершаем программу с кодом выхода 1.
		// По существующему соглашению нулевой код свидетельствует об успешном завершении,
		// а ненулевой указывает на наличие ошибки.
		os.Exit(1)
	}
	fmt.Println("Текущее время:", ntpTime)
}
